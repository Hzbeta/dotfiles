# custom env
export XDG_CONFIG_HOME="$HOME/.config"
# shellcheck source=/dev/null
source "${XDG_CONFIG_HOME:-${HOME}/.config}/zsh/utils.zsh"

debug_log ".zshenv begin..."

# Skip the not really helping Ubuntu global compinit
# shellcheck disable=SC2034
skip_global_compinit=1

# conda
if [[ -d "$HOME/miniconda3" ]]; then
    debug_log "conda init..."
    # !! Contents within this block are managed by 'conda init' !!
    __conda_setup="$("$HOME/miniconda3/bin/conda" 'shell.zsh' 'hook' 2>/dev/null)"
    if [[ $? -eq 0 ]]; then
        eval "$__conda_setup"
    else
        if [[ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]]; then
            # shellcheck source=/dev/null
            . "$HOME/miniconda3/etc/profile.d/conda.sh"
        else
            export PATH="$HOME/miniconda3/bin:$PATH"
        fi
    fi
    unset __conda_setup
fi

# pnpm
if ! command -v pnpm &>/dev/null && [[ -d "$HOME/.local/share/pnpm" ]]; then
    debug_log "pnpm init..."
    export PNPM_HOME="$HOME/.local/share/pnpm"
    export PATH="$PNPM_HOME:$PATH"
fi

# homebrew
if [[ -d "/home/linuxbrew/.linuxbrew" ]]; then
    debug_log "homebrew init..."
    eval "$("/home/linuxbrew/.linuxbrew/bin/brew" shellenv)"
    add_completions_to_fpath "$(brew --prefix)/share/zsh/site-functions"
fi

# nix
debug_log "nix init..."
# shellcheck source=/dev/null
if [[ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]]; then
    # for multi-user mode
    source '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
    # we need to add two paths to FPATH
    add_completions_to_fpath "/nix/var/nix/profiles/default/share/zsh/site-functions"
    add_completions_to_fpath "$HOME/.nix-profile/share/zsh/site-functions"
elif [[ -e "$HOME/.nix-profile/etc/profile.d/nix.sh" ]]; then
    # for single-user mode
    source "$HOME/.nix-profile/etc/profile.d/nix.sh"
    add_completions_to_fpath "$HOME/.nix-profile/share/zsh/site-functions"
fi

# editor preference neovim > vim > nano > vi
if command -v nvim &>/dev/null; then
    export EDITOR=nvim
elif command -v vim &>/dev/null; then
    export EDITOR=vim
elif command -v nano &>/dev/null; then
    export EDITOR=nano
elif command -v vi &>/dev/null; then
    export EDITOR=vi
fi

# load nvm if exists
if ! command -v nvm &>/dev/null; then
    debug_log "nvm init..."
    NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
    # shellcheck source=/dev/null
    [[ -d "$NVM_DIR" ]] && export NVM_DIR && [[ -s "$NVM_DIR/nvm.sh" ]] && \. "$NVM_DIR/nvm.sh"
fi

unfunction add_completions_to_fpath
debug_log ".zshenv end!"